# Generated from Junos.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,35,386,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
        2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
        2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,
        5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,
        8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,
        10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,
        10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,
        11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,
        13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,15,1,15,5,15,227,8,
        15,10,15,12,15,230,9,15,1,16,1,16,1,16,1,16,1,16,1,16,3,16,238,8,
        16,1,16,1,16,1,16,1,16,1,17,3,17,245,8,17,1,17,1,17,1,17,5,17,250,
        8,17,10,17,12,17,253,9,17,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,20,
        1,20,5,20,264,8,20,10,20,12,20,267,9,20,1,20,1,20,1,21,4,21,272,
        8,21,11,21,12,21,273,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,
        1,23,1,23,5,23,287,8,23,10,23,12,23,290,9,23,1,23,3,23,293,8,23,
        1,24,1,24,1,24,5,24,298,8,24,10,24,12,24,301,9,24,1,24,1,24,1,24,
        1,24,1,24,1,24,3,24,309,8,24,1,24,1,24,5,24,313,8,24,10,24,12,24,
        316,9,24,1,24,1,24,3,24,320,8,24,1,25,1,25,1,25,1,25,1,26,1,26,1,
        26,1,26,1,27,1,27,1,27,1,27,1,27,3,27,335,8,27,1,28,1,28,3,28,339,
        8,28,1,28,3,28,342,8,28,1,28,3,28,345,8,28,1,29,1,29,1,30,1,30,5,
        30,351,8,30,10,30,12,30,354,9,30,1,30,3,30,357,8,30,1,30,1,30,1,
        30,1,30,1,31,4,31,364,8,31,11,31,12,31,365,1,31,1,31,1,32,1,32,1,
        32,1,32,1,32,1,33,3,33,376,8,33,1,33,1,33,1,34,1,34,5,34,382,8,34,
        10,34,12,34,385,9,34,2,265,352,0,35,1,1,3,2,5,3,7,4,9,5,11,6,13,
        7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,
        59,30,61,31,63,32,65,33,67,34,69,35,1,0,6,5,0,42,42,45,57,65,90,
        95,95,97,122,1,0,48,57,3,0,48,57,65,70,97,102,2,0,9,9,32,32,2,0,
        65,90,97,122,5,0,45,45,48,57,65,90,95,95,97,122,407,0,1,1,0,0,0,
        0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
        1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
        1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
        1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,
        1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,
        1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,1,71,1,0,0,0,3,75,
        1,0,0,0,5,86,1,0,0,0,7,120,1,0,0,0,9,131,1,0,0,0,11,139,1,0,0,0,
        13,147,1,0,0,0,15,153,1,0,0,0,17,160,1,0,0,0,19,165,1,0,0,0,21,171,
        1,0,0,0,23,191,1,0,0,0,25,205,1,0,0,0,27,214,1,0,0,0,29,222,1,0,
        0,0,31,224,1,0,0,0,33,237,1,0,0,0,35,244,1,0,0,0,37,254,1,0,0,0,
        39,257,1,0,0,0,41,261,1,0,0,0,43,271,1,0,0,0,45,275,1,0,0,0,47,292,
        1,0,0,0,49,319,1,0,0,0,51,321,1,0,0,0,53,325,1,0,0,0,55,334,1,0,
        0,0,57,336,1,0,0,0,59,346,1,0,0,0,61,348,1,0,0,0,63,363,1,0,0,0,
        65,369,1,0,0,0,67,375,1,0,0,0,69,379,1,0,0,0,71,72,5,115,0,0,72,
        73,5,101,0,0,73,74,5,116,0,0,74,2,1,0,0,0,75,76,5,100,0,0,76,77,
        5,101,0,0,77,78,5,97,0,0,78,79,5,99,0,0,79,80,5,116,0,0,80,81,5,
        105,0,0,81,82,5,118,0,0,82,83,5,97,0,0,83,84,5,116,0,0,84,85,5,101,
        0,0,85,4,1,0,0,0,86,87,5,114,0,0,87,88,5,111,0,0,88,89,5,117,0,0,
        89,90,5,116,0,0,90,91,5,105,0,0,91,92,5,110,0,0,92,93,5,103,0,0,
        93,94,5,45,0,0,94,95,5,111,0,0,95,96,5,112,0,0,96,97,5,116,0,0,97,
        98,5,105,0,0,98,99,5,111,0,0,99,100,5,110,0,0,100,101,5,115,0,0,
        101,102,5,32,0,0,102,103,5,97,0,0,103,104,5,117,0,0,104,105,5,116,
        0,0,105,106,5,111,0,0,106,107,5,110,0,0,107,108,5,111,0,0,108,109,
        5,109,0,0,109,110,5,111,0,0,110,111,5,117,0,0,111,112,5,115,0,0,
        112,113,5,45,0,0,113,114,5,115,0,0,114,115,5,121,0,0,115,116,5,115,
        0,0,116,117,5,116,0,0,117,118,5,101,0,0,118,119,5,109,0,0,119,6,
        1,0,0,0,120,121,5,105,0,0,121,122,5,110,0,0,122,123,5,116,0,0,123,
        124,5,101,0,0,124,125,5,114,0,0,125,126,5,102,0,0,126,127,5,97,0,
        0,127,128,5,99,0,0,128,129,5,101,0,0,129,130,5,115,0,0,130,8,1,0,
        0,0,131,132,5,97,0,0,132,133,5,100,0,0,133,134,5,100,0,0,134,135,
        5,114,0,0,135,136,5,101,0,0,136,137,5,115,0,0,137,138,5,115,0,0,
        138,10,1,0,0,0,139,140,5,118,0,0,140,141,5,108,0,0,141,142,5,97,
        0,0,142,143,5,110,0,0,143,144,5,45,0,0,144,145,5,105,0,0,145,146,
        5,100,0,0,146,12,1,0,0,0,147,148,5,117,0,0,148,149,5,110,0,0,149,
        150,5,105,0,0,150,151,5,116,0,0,151,152,5,32,0,0,152,14,1,0,0,0,
        153,154,5,102,0,0,154,155,5,97,0,0,155,156,5,109,0,0,156,157,5,105,
        0,0,157,158,5,108,0,0,158,159,5,121,0,0,159,16,1,0,0,0,160,161,5,
        105,0,0,161,162,5,110,0,0,162,163,5,101,0,0,163,164,5,116,0,0,164,
        18,1,0,0,0,165,166,5,105,0,0,166,167,5,110,0,0,167,168,5,101,0,0,
        168,169,5,116,0,0,169,170,5,54,0,0,170,20,1,0,0,0,171,172,5,112,
        0,0,172,173,5,114,0,0,173,174,5,111,0,0,174,175,5,116,0,0,175,176,
        5,111,0,0,176,177,5,99,0,0,177,178,5,111,0,0,178,179,5,108,0,0,179,
        180,5,115,0,0,180,181,5,32,0,0,181,182,5,98,0,0,182,183,5,103,0,
        0,183,184,5,112,0,0,184,185,5,32,0,0,185,186,5,103,0,0,186,187,5,
        114,0,0,187,188,5,111,0,0,188,189,5,117,0,0,189,190,5,112,0,0,190,
        22,1,0,0,0,191,192,5,108,0,0,192,193,5,111,0,0,193,194,5,99,0,0,
        194,195,5,97,0,0,195,196,5,108,0,0,196,197,5,45,0,0,197,198,5,97,
        0,0,198,199,5,100,0,0,199,200,5,100,0,0,200,201,5,114,0,0,201,202,
        5,101,0,0,202,203,5,115,0,0,203,204,5,115,0,0,204,24,1,0,0,0,205,
        206,5,110,0,0,206,207,5,101,0,0,207,208,5,105,0,0,208,209,5,103,
        0,0,209,210,5,104,0,0,210,211,5,98,0,0,211,212,5,111,0,0,212,213,
        5,114,0,0,213,26,1,0,0,0,214,215,5,112,0,0,215,216,5,101,0,0,216,
        217,5,101,0,0,217,218,5,114,0,0,218,219,5,45,0,0,219,220,5,97,0,
        0,220,221,5,115,0,0,221,28,1,0,0,0,222,223,5,44,0,0,223,30,1,0,0,
        0,224,228,7,0,0,0,225,227,7,0,0,0,226,225,1,0,0,0,227,230,1,0,0,
        0,228,226,1,0,0,0,228,229,1,0,0,0,229,32,1,0,0,0,230,228,1,0,0,0,
        231,232,5,48,0,0,232,233,5,120,0,0,233,234,1,0,0,0,234,235,3,43,
        21,0,235,236,5,58,0,0,236,238,1,0,0,0,237,231,1,0,0,0,237,238,1,
        0,0,0,238,239,1,0,0,0,239,240,3,43,21,0,240,241,5,58,0,0,241,242,
        3,43,21,0,242,34,1,0,0,0,243,245,5,46,0,0,244,243,1,0,0,0,244,245,
        1,0,0,0,245,246,1,0,0,0,246,251,3,31,15,0,247,250,2,43,47,0,248,
        250,3,31,15,0,249,247,1,0,0,0,249,248,1,0,0,0,250,253,1,0,0,0,251,
        249,1,0,0,0,251,252,1,0,0,0,252,36,1,0,0,0,253,251,1,0,0,0,254,255,
        5,46,0,0,255,256,3,31,15,0,256,38,1,0,0,0,257,258,3,31,15,0,258,
        259,2,45,46,0,259,260,3,31,15,0,260,40,1,0,0,0,261,265,5,34,0,0,
        262,264,9,0,0,0,263,262,1,0,0,0,264,267,1,0,0,0,265,266,1,0,0,0,
        265,263,1,0,0,0,266,268,1,0,0,0,267,265,1,0,0,0,268,269,5,34,0,0,
        269,42,1,0,0,0,270,272,7,1,0,0,271,270,1,0,0,0,272,273,1,0,0,0,273,
        271,1,0,0,0,273,274,1,0,0,0,274,44,1,0,0,0,275,276,3,43,21,0,276,
        277,5,46,0,0,277,278,3,43,21,0,278,279,5,46,0,0,279,280,3,43,21,
        0,280,281,5,46,0,0,281,282,3,43,21,0,282,46,1,0,0,0,283,288,3,57,
        28,0,284,285,5,58,0,0,285,287,3,57,28,0,286,284,1,0,0,0,287,290,
        1,0,0,0,288,286,1,0,0,0,288,289,1,0,0,0,289,293,1,0,0,0,290,288,
        1,0,0,0,291,293,3,49,24,0,292,283,1,0,0,0,292,291,1,0,0,0,293,48,
        1,0,0,0,294,299,3,57,28,0,295,296,5,58,0,0,296,298,3,57,28,0,297,
        295,1,0,0,0,298,301,1,0,0,0,299,297,1,0,0,0,299,300,1,0,0,0,300,
        308,1,0,0,0,301,299,1,0,0,0,302,303,5,58,0,0,303,304,5,58,0,0,304,
        305,1,0,0,0,305,309,3,57,28,0,306,307,5,58,0,0,307,309,5,58,0,0,
        308,302,1,0,0,0,308,306,1,0,0,0,309,314,1,0,0,0,310,311,5,58,0,0,
        311,313,3,57,28,0,312,310,1,0,0,0,313,316,1,0,0,0,314,312,1,0,0,
        0,314,315,1,0,0,0,315,320,1,0,0,0,316,314,1,0,0,0,317,318,5,58,0,
        0,318,320,5,58,0,0,319,294,1,0,0,0,319,317,1,0,0,0,320,50,1,0,0,
        0,321,322,3,45,22,0,322,323,5,47,0,0,323,324,3,43,21,0,324,52,1,
        0,0,0,325,326,3,47,23,0,326,327,5,47,0,0,327,328,3,43,21,0,328,54,
        1,0,0,0,329,330,5,121,0,0,330,331,5,101,0,0,331,335,5,115,0,0,332,
        333,5,110,0,0,333,335,5,111,0,0,334,329,1,0,0,0,334,332,1,0,0,0,
        335,56,1,0,0,0,336,338,3,59,29,0,337,339,3,59,29,0,338,337,1,0,0,
        0,338,339,1,0,0,0,339,341,1,0,0,0,340,342,3,59,29,0,341,340,1,0,
        0,0,341,342,1,0,0,0,342,344,1,0,0,0,343,345,3,59,29,0,344,343,1,
        0,0,0,344,345,1,0,0,0,345,58,1,0,0,0,346,347,7,2,0,0,347,60,1,0,
        0,0,348,352,5,35,0,0,349,351,9,0,0,0,350,349,1,0,0,0,351,354,1,0,
        0,0,352,353,1,0,0,0,352,350,1,0,0,0,353,356,1,0,0,0,354,352,1,0,
        0,0,355,357,5,13,0,0,356,355,1,0,0,0,356,357,1,0,0,0,357,358,1,0,
        0,0,358,359,5,10,0,0,359,360,1,0,0,0,360,361,6,30,0,0,361,62,1,0,
        0,0,362,364,7,3,0,0,363,362,1,0,0,0,364,365,1,0,0,0,365,363,1,0,
        0,0,365,366,1,0,0,0,366,367,1,0,0,0,367,368,6,31,0,0,368,64,1,0,
        0,0,369,370,5,92,0,0,370,371,3,67,33,0,371,372,1,0,0,0,372,373,6,
        32,0,0,373,66,1,0,0,0,374,376,5,13,0,0,375,374,1,0,0,0,375,376,1,
        0,0,0,376,377,1,0,0,0,377,378,5,10,0,0,378,68,1,0,0,0,379,383,7,
        4,0,0,380,382,7,5,0,0,381,380,1,0,0,0,382,385,1,0,0,0,383,381,1,
        0,0,0,383,384,1,0,0,0,384,70,1,0,0,0,385,383,1,0,0,0,23,0,228,237,
        244,249,251,265,273,288,292,299,308,314,319,334,338,341,344,352,
        356,365,375,383,1,6,0,0
    ]

class JunosLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    WORD = 16
    COMMUNITY = 17
    COMPLEX_WORD = 18
    COMPLEX_WORD2 = 19
    COMPLEX_WORD3 = 20
    STRING = 21
    NUMBER = 22
    IPV4_ADDRESS = 23
    IPV6_ADDRESS = 24
    IPV6_SHORTHAND = 25
    IPV4_NETWORK = 26
    IPV6_NETWORK = 27
    BOOLEAN = 28
    HEX_QUAD = 29
    HEX_DIGIT = 30
    COMMENT = 31
    WS = 32
    CONTINUED_LINE = 33
    NEWLINE = 34
    ID = 35

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'set'", "'deactivate'", "'routing-options autonomous-system'", 
            "'interfaces'", "'address'", "'vlan-id'", "'unit '", "'family'", 
            "'inet'", "'inet6'", "'protocols bgp group'", "'local-address'", 
            "'neighbor'", "'peer-as'", "','" ]

    symbolicNames = [ "<INVALID>",
            "WORD", "COMMUNITY", "COMPLEX_WORD", "COMPLEX_WORD2", "COMPLEX_WORD3", 
            "STRING", "NUMBER", "IPV4_ADDRESS", "IPV6_ADDRESS", "IPV6_SHORTHAND", 
            "IPV4_NETWORK", "IPV6_NETWORK", "BOOLEAN", "HEX_QUAD", "HEX_DIGIT", 
            "COMMENT", "WS", "CONTINUED_LINE", "NEWLINE", "ID" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "WORD", "COMMUNITY", "COMPLEX_WORD", "COMPLEX_WORD2", 
                  "COMPLEX_WORD3", "STRING", "NUMBER", "IPV4_ADDRESS", "IPV6_ADDRESS", 
                  "IPV6_SHORTHAND", "IPV4_NETWORK", "IPV6_NETWORK", "BOOLEAN", 
                  "HEX_QUAD", "HEX_DIGIT", "COMMENT", "WS", "CONTINUED_LINE", 
                  "NEWLINE", "ID" ]

    grammarFileName = "Junos.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


