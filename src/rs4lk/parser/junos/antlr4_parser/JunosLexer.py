# Generated from Junos.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,37,399,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,1,0,1,0,1,0,1,0,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,
        2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,
        4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,
        6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
        1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,
        1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,
        1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,
        1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,5,16,206,8,16,10,16,12,16,
        209,9,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,
        1,17,1,17,1,17,5,17,225,8,17,10,17,12,17,228,9,17,1,17,1,17,1,17,
        1,17,1,17,1,17,1,17,1,17,5,17,238,8,17,10,17,12,17,241,9,17,3,17,
        243,8,17,1,18,1,18,1,18,1,18,1,18,1,18,3,18,251,8,18,1,18,1,18,1,
        18,1,18,1,19,3,19,258,8,19,1,19,1,19,1,19,5,19,263,8,19,10,19,12,
        19,266,9,19,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,22,1,22,5,22,277,
        8,22,10,22,12,22,280,9,22,1,22,1,22,1,23,4,23,285,8,23,11,23,12,
        23,286,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,5,
        25,300,8,25,10,25,12,25,303,9,25,1,25,3,25,306,8,25,1,26,1,26,1,
        26,5,26,311,8,26,10,26,12,26,314,9,26,1,26,1,26,1,26,1,26,1,26,1,
        26,3,26,322,8,26,1,26,1,26,5,26,326,8,26,10,26,12,26,329,9,26,1,
        26,1,26,3,26,333,8,26,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,
        29,1,29,1,29,1,29,1,29,3,29,348,8,29,1,30,1,30,3,30,352,8,30,1,30,
        3,30,355,8,30,1,30,3,30,358,8,30,1,31,1,31,1,32,1,32,5,32,364,8,
        32,10,32,12,32,367,9,32,1,32,3,32,370,8,32,1,32,1,32,1,32,1,32,1,
        33,4,33,377,8,33,11,33,12,33,378,1,33,1,33,1,34,1,34,1,34,1,34,1,
        34,1,35,3,35,389,8,35,1,35,1,35,1,36,1,36,5,36,395,8,36,10,36,12,
        36,398,9,36,2,278,365,0,37,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
        9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,
        20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,
        31,63,32,65,33,67,34,69,35,71,36,73,37,1,0,6,5,0,42,42,45,57,65,
        90,95,95,97,122,1,0,48,57,3,0,48,57,65,70,97,102,3,0,9,10,13,13,
        32,32,2,0,65,90,97,122,5,0,45,45,48,57,65,90,95,95,97,122,424,0,
        1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,
        0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,
        0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,
        0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,
        0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,
        0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,
        0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,
        0,0,0,0,73,1,0,0,0,1,75,1,0,0,0,3,79,1,0,0,0,5,90,1,0,0,0,7,101,
        1,0,0,0,9,106,1,0,0,0,11,114,1,0,0,0,13,122,1,0,0,0,15,129,1,0,0,
        0,17,134,1,0,0,0,19,140,1,0,0,0,21,148,1,0,0,0,23,168,1,0,0,0,25,
        182,1,0,0,0,27,191,1,0,0,0,29,199,1,0,0,0,31,201,1,0,0,0,33,203,
        1,0,0,0,35,242,1,0,0,0,37,250,1,0,0,0,39,257,1,0,0,0,41,267,1,0,
        0,0,43,270,1,0,0,0,45,274,1,0,0,0,47,284,1,0,0,0,49,288,1,0,0,0,
        51,305,1,0,0,0,53,332,1,0,0,0,55,334,1,0,0,0,57,338,1,0,0,0,59,347,
        1,0,0,0,61,349,1,0,0,0,63,359,1,0,0,0,65,361,1,0,0,0,67,376,1,0,
        0,0,69,382,1,0,0,0,71,388,1,0,0,0,73,392,1,0,0,0,75,76,5,115,0,0,
        76,77,5,101,0,0,77,78,5,116,0,0,78,2,1,0,0,0,79,80,5,100,0,0,80,
        81,5,101,0,0,81,82,5,97,0,0,82,83,5,99,0,0,83,84,5,116,0,0,84,85,
        5,105,0,0,85,86,5,118,0,0,86,87,5,97,0,0,87,88,5,116,0,0,88,89,5,
        101,0,0,89,4,1,0,0,0,90,91,5,105,0,0,91,92,5,110,0,0,92,93,5,116,
        0,0,93,94,5,101,0,0,94,95,5,114,0,0,95,96,5,102,0,0,96,97,5,97,0,
        0,97,98,5,99,0,0,98,99,5,101,0,0,99,100,5,115,0,0,100,6,1,0,0,0,
        101,102,5,117,0,0,102,103,5,110,0,0,103,104,5,105,0,0,104,105,5,
        116,0,0,105,8,1,0,0,0,106,107,5,97,0,0,107,108,5,100,0,0,108,109,
        5,100,0,0,109,110,5,114,0,0,110,111,5,101,0,0,111,112,5,115,0,0,
        112,113,5,115,0,0,113,10,1,0,0,0,114,115,5,118,0,0,115,116,5,108,
        0,0,116,117,5,97,0,0,117,118,5,110,0,0,118,119,5,45,0,0,119,120,
        5,105,0,0,120,121,5,100,0,0,121,12,1,0,0,0,122,123,5,102,0,0,123,
        124,5,97,0,0,124,125,5,109,0,0,125,126,5,105,0,0,126,127,5,108,0,
        0,127,128,5,121,0,0,128,14,1,0,0,0,129,130,5,105,0,0,130,131,5,110,
        0,0,131,132,5,101,0,0,132,133,5,116,0,0,133,16,1,0,0,0,134,135,5,
        105,0,0,135,136,5,110,0,0,136,137,5,101,0,0,137,138,5,116,0,0,138,
        139,5,54,0,0,139,18,1,0,0,0,140,141,5,118,0,0,141,142,5,101,0,0,
        142,143,5,114,0,0,143,144,5,115,0,0,144,145,5,105,0,0,145,146,5,
        111,0,0,146,147,5,110,0,0,147,20,1,0,0,0,148,149,5,112,0,0,149,150,
        5,114,0,0,150,151,5,111,0,0,151,152,5,116,0,0,152,153,5,111,0,0,
        153,154,5,99,0,0,154,155,5,111,0,0,155,156,5,108,0,0,156,157,5,115,
        0,0,157,158,5,32,0,0,158,159,5,98,0,0,159,160,5,103,0,0,160,161,
        5,112,0,0,161,162,5,32,0,0,162,163,5,103,0,0,163,164,5,114,0,0,164,
        165,5,111,0,0,165,166,5,117,0,0,166,167,5,112,0,0,167,22,1,0,0,0,
        168,169,5,108,0,0,169,170,5,111,0,0,170,171,5,99,0,0,171,172,5,97,
        0,0,172,173,5,108,0,0,173,174,5,45,0,0,174,175,5,97,0,0,175,176,
        5,100,0,0,176,177,5,100,0,0,177,178,5,114,0,0,178,179,5,101,0,0,
        179,180,5,115,0,0,180,181,5,115,0,0,181,24,1,0,0,0,182,183,5,110,
        0,0,183,184,5,101,0,0,184,185,5,105,0,0,185,186,5,103,0,0,186,187,
        5,104,0,0,187,188,5,98,0,0,188,189,5,111,0,0,189,190,5,114,0,0,190,
        26,1,0,0,0,191,192,5,112,0,0,192,193,5,101,0,0,193,194,5,101,0,0,
        194,195,5,114,0,0,195,196,5,45,0,0,196,197,5,97,0,0,197,198,5,115,
        0,0,198,28,1,0,0,0,199,200,5,61,0,0,200,30,1,0,0,0,201,202,5,44,
        0,0,202,32,1,0,0,0,203,207,7,0,0,0,204,206,7,0,0,0,205,204,1,0,0,
        0,206,209,1,0,0,0,207,205,1,0,0,0,207,208,1,0,0,0,208,34,1,0,0,0,
        209,207,1,0,0,0,210,211,5,101,0,0,211,212,5,116,0,0,212,213,5,104,
        0,0,213,214,5,101,0,0,214,215,5,114,0,0,215,216,1,0,0,0,216,243,
        3,47,23,0,217,218,5,115,0,0,218,219,5,102,0,0,219,220,5,112,0,0,
        220,221,1,0,0,0,221,226,3,47,23,0,222,223,5,45,0,0,223,225,3,47,
        23,0,224,222,1,0,0,0,225,228,1,0,0,0,226,224,1,0,0,0,226,227,1,0,
        0,0,227,243,1,0,0,0,228,226,1,0,0,0,229,230,5,113,0,0,230,231,5,
        115,0,0,231,232,5,102,0,0,232,233,5,112,0,0,233,234,1,0,0,0,234,
        239,3,47,23,0,235,236,5,45,0,0,236,238,3,47,23,0,237,235,1,0,0,0,
        238,241,1,0,0,0,239,237,1,0,0,0,239,240,1,0,0,0,240,243,1,0,0,0,
        241,239,1,0,0,0,242,210,1,0,0,0,242,217,1,0,0,0,242,229,1,0,0,0,
        243,36,1,0,0,0,244,245,5,48,0,0,245,246,5,120,0,0,246,247,1,0,0,
        0,247,248,3,47,23,0,248,249,5,58,0,0,249,251,1,0,0,0,250,244,1,0,
        0,0,250,251,1,0,0,0,251,252,1,0,0,0,252,253,3,47,23,0,253,254,5,
        58,0,0,254,255,3,47,23,0,255,38,1,0,0,0,256,258,5,46,0,0,257,256,
        1,0,0,0,257,258,1,0,0,0,258,259,1,0,0,0,259,264,3,33,16,0,260,263,
        2,45,47,0,261,263,3,33,16,0,262,260,1,0,0,0,262,261,1,0,0,0,263,
        266,1,0,0,0,264,262,1,0,0,0,264,265,1,0,0,0,265,40,1,0,0,0,266,264,
        1,0,0,0,267,268,5,46,0,0,268,269,3,33,16,0,269,42,1,0,0,0,270,271,
        3,33,16,0,271,272,2,45,46,0,272,273,3,33,16,0,273,44,1,0,0,0,274,
        278,5,34,0,0,275,277,9,0,0,0,276,275,1,0,0,0,277,280,1,0,0,0,278,
        279,1,0,0,0,278,276,1,0,0,0,279,281,1,0,0,0,280,278,1,0,0,0,281,
        282,5,34,0,0,282,46,1,0,0,0,283,285,7,1,0,0,284,283,1,0,0,0,285,
        286,1,0,0,0,286,284,1,0,0,0,286,287,1,0,0,0,287,48,1,0,0,0,288,289,
        3,47,23,0,289,290,5,46,0,0,290,291,3,47,23,0,291,292,5,46,0,0,292,
        293,3,47,23,0,293,294,5,46,0,0,294,295,3,47,23,0,295,50,1,0,0,0,
        296,301,3,61,30,0,297,298,5,58,0,0,298,300,3,61,30,0,299,297,1,0,
        0,0,300,303,1,0,0,0,301,299,1,0,0,0,301,302,1,0,0,0,302,306,1,0,
        0,0,303,301,1,0,0,0,304,306,3,53,26,0,305,296,1,0,0,0,305,304,1,
        0,0,0,306,52,1,0,0,0,307,312,3,61,30,0,308,309,5,58,0,0,309,311,
        3,61,30,0,310,308,1,0,0,0,311,314,1,0,0,0,312,310,1,0,0,0,312,313,
        1,0,0,0,313,321,1,0,0,0,314,312,1,0,0,0,315,316,5,58,0,0,316,317,
        5,58,0,0,317,318,1,0,0,0,318,322,3,61,30,0,319,320,5,58,0,0,320,
        322,5,58,0,0,321,315,1,0,0,0,321,319,1,0,0,0,322,327,1,0,0,0,323,
        324,5,58,0,0,324,326,3,61,30,0,325,323,1,0,0,0,326,329,1,0,0,0,327,
        325,1,0,0,0,327,328,1,0,0,0,328,333,1,0,0,0,329,327,1,0,0,0,330,
        331,5,58,0,0,331,333,5,58,0,0,332,307,1,0,0,0,332,330,1,0,0,0,333,
        54,1,0,0,0,334,335,3,49,24,0,335,336,5,47,0,0,336,337,3,47,23,0,
        337,56,1,0,0,0,338,339,3,51,25,0,339,340,5,47,0,0,340,341,3,47,23,
        0,341,58,1,0,0,0,342,343,5,121,0,0,343,344,5,101,0,0,344,348,5,115,
        0,0,345,346,5,110,0,0,346,348,5,111,0,0,347,342,1,0,0,0,347,345,
        1,0,0,0,348,60,1,0,0,0,349,351,3,63,31,0,350,352,3,63,31,0,351,350,
        1,0,0,0,351,352,1,0,0,0,352,354,1,0,0,0,353,355,3,63,31,0,354,353,
        1,0,0,0,354,355,1,0,0,0,355,357,1,0,0,0,356,358,3,63,31,0,357,356,
        1,0,0,0,357,358,1,0,0,0,358,62,1,0,0,0,359,360,7,2,0,0,360,64,1,
        0,0,0,361,365,5,35,0,0,362,364,9,0,0,0,363,362,1,0,0,0,364,367,1,
        0,0,0,365,366,1,0,0,0,365,363,1,0,0,0,366,369,1,0,0,0,367,365,1,
        0,0,0,368,370,5,13,0,0,369,368,1,0,0,0,369,370,1,0,0,0,370,371,1,
        0,0,0,371,372,5,10,0,0,372,373,1,0,0,0,373,374,6,32,0,0,374,66,1,
        0,0,0,375,377,7,3,0,0,376,375,1,0,0,0,377,378,1,0,0,0,378,376,1,
        0,0,0,378,379,1,0,0,0,379,380,1,0,0,0,380,381,6,33,0,0,381,68,1,
        0,0,0,382,383,5,92,0,0,383,384,3,71,35,0,384,385,1,0,0,0,385,386,
        6,34,0,0,386,70,1,0,0,0,387,389,5,13,0,0,388,387,1,0,0,0,388,389,
        1,0,0,0,389,390,1,0,0,0,390,391,5,10,0,0,391,72,1,0,0,0,392,396,
        7,4,0,0,393,395,7,5,0,0,394,393,1,0,0,0,395,398,1,0,0,0,396,394,
        1,0,0,0,396,397,1,0,0,0,397,74,1,0,0,0,398,396,1,0,0,0,26,0,207,
        226,239,242,250,257,262,264,278,286,301,305,312,321,327,332,347,
        351,354,357,365,369,378,388,396,1,6,0,0
    ]

class JunosLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    WORD = 17
    INTERFACE_NAME = 18
    COMMUNITY = 19
    COMPLEX_WORD = 20
    COMPLEX_WORD2 = 21
    COMPLEX_WORD3 = 22
    STRING = 23
    NUMBER = 24
    IP_ADDRESS = 25
    IPV6_ADDRESS = 26
    IPV6_SHORTHAND = 27
    NETWORK = 28
    IPV6_NETWORK = 29
    BOOLEAN = 30
    HEX_QUAD = 31
    HEX_DIGIT = 32
    COMMENT = 33
    WS = 34
    CONTINUED_LINE = 35
    NEWLINE = 36
    ID = 37

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'set'", "'deactivate'", "'interfaces'", "'unit'", "'address'", 
            "'vlan-id'", "'family'", "'inet'", "'inet6'", "'version'", "'protocols bgp group'", 
            "'local-address'", "'neighbor'", "'peer-as'", "'='", "','" ]

    symbolicNames = [ "<INVALID>",
            "WORD", "INTERFACE_NAME", "COMMUNITY", "COMPLEX_WORD", "COMPLEX_WORD2", 
            "COMPLEX_WORD3", "STRING", "NUMBER", "IP_ADDRESS", "IPV6_ADDRESS", 
            "IPV6_SHORTHAND", "NETWORK", "IPV6_NETWORK", "BOOLEAN", "HEX_QUAD", 
            "HEX_DIGIT", "COMMENT", "WS", "CONTINUED_LINE", "NEWLINE", "ID" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "WORD", "INTERFACE_NAME", "COMMUNITY", 
                  "COMPLEX_WORD", "COMPLEX_WORD2", "COMPLEX_WORD3", "STRING", 
                  "NUMBER", "IP_ADDRESS", "IPV6_ADDRESS", "IPV6_SHORTHAND", 
                  "NETWORK", "IPV6_NETWORK", "BOOLEAN", "HEX_QUAD", "HEX_DIGIT", 
                  "COMMENT", "WS", "CONTINUED_LINE", "NEWLINE", "ID" ]

    grammarFileName = "Junos.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


